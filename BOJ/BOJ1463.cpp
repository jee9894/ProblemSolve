/****************************************************************************
						jee9894's Problem Solve Study
=============================================================================
		Problem Name       : 1로 만들기
		Problem Number     : 1463
		algorithm          : dynamic programming
=============================================================================
		History
		---------------------------------------------------------------------
		jee9894 : 2019.12.11 create
		----------------------------------------------------------------------
=============================================================================
		Note.
****************************************************************************/
#include <iostream>

using namespace std;

#define MAX_SIZE 1000001

unsigned int dp[MAX_SIZE];

void MakeOne(int n)
{
	for (int i = 2; i <= n; ++i)
	{
		if (i % 3 == 0)
		{
			// 3으로 나눌수 있으면 3으로 나눴을때의 경우의 수+1과 -1한 경우의 수+1 중 작은 값 대입
			dp[i] = dp[i / 3] + 1 <= dp[i - 1] + 1 ? dp[i / 3] + 1 : dp[i - 1] + 1;
		}
		else if (i % 2 == 0)
		{
			// 2로 나눌수 있으면 2로 나눴을때의 경우의 수+1과 -1한 경우의 수+1 중 작은 값 대입
			dp[i] = dp[i / 2] + 1 <= dp[i - 1] + 1 ? dp[i / 2] + 1 : dp[i - 1] + 1;
		}
		else
		{
			// 3,2로 나누지 못할때는 -1한 경우의 수+1 값 대입
			dp[i] = dp[i - 1] + 1;
		}
	}
}

int main()
{
	ios::sync_with_stdio(false);
	cin.tie(NULL);
	cout.tie(NULL);

	int num;
	cin >> num;
	MakeOne(num);
	cout << dp[num] << "\n";
}
